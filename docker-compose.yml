version: '3.8'

services:
  # Backend Django
  arryn-backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: arryn-backend
    ports:
      - "8000:8000"
    environment:
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY:-docker-production-secret-key-change-this}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1,0.0.0.0,arryn-backend}
      - MONGO_HOST=${MONGO_HOST:-}
      - MONGO_PORT=${MONGO_PORT:-}
      - MONGO_DB_NAME=${MONGO_DB_NAME:-arryn_products_db}
      - MONGO_CONNECTION_TIMEOUT=10000
      - MONGODB_URL=${MONGODB_URL}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:3000,http://127.0.0.1:3000,http://localhost:5173,http://127.0.0.1:5173}
      - CACHE_BACKEND=django.core.cache.backends.locmem.LocMemCache
      - CACHE_LOCATION=arryn-cache
      - CACHE_TIMEOUT=300
      - RATE_LIMIT_REQUESTS=100
      - RATE_LIMIT_WINDOW=60
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME:-admin}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL:-admin@arryn.com}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD:-admin123}
    volumes:
      - ./logs:/app/logs
      - ./static:/app/static
      - ./media:/app/media
    depends_on:
      - mongodb
    networks:
      - arryn-network
    restart: unless-stopped
    command: ["development"]

  # MongoDB
  mongodb:
    image: mongo:7
    container_name: arryn-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
      - MONGO_INITDB_DATABASE=arryn_products_db
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - arryn-network
    restart: unless-stopped

  # Redis (para cache en producción)
  redis:
    image: redis:7-alpine
    container_name: arryn-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - arryn-network
    restart: unless-stopped

  # Nginx (proxy reverso para producción)
  nginx:
    image: nginx:alpine
    container_name: arryn-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/var/www/static:ro
      - ./media:/var/www/media:ro
    depends_on:
      - arryn-backend
    networks:
      - arryn-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  arryn-network:
    driver: bridge